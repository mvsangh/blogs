/* [project]/src/app/globals.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-duration: initial;
    }
  }
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.z-10 {
  z-index: 10;
}

.z-50 {
  z-index: 50;
}

.container {
  width: 100%;
}

.mx-auto {
  margin-inline: auto;
}

.line-clamp-3 {
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.inline-flex {
  display: inline-flex;
}

.h-full {
  height: 100%;
}

.min-h-screen {
  min-height: 100vh;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.rounded-full {
  border-radius: 3.40282e38px;
}

.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}

.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}

.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}

.border-\[var\(--border\)\] {
  border-color: var(--border);
}

.bg-\[var\(--background\)\]\/80 {
  background-color: var(--background);
}

@supports (color: color-mix(in lab, red, red)) {
  .bg-\[var\(--background\)\]\/80 {
    background-color: color-mix(in oklab, var(--background) 80%, transparent);
  }
}

.bg-\[var\(--card\)\] {
  background-color: var(--card);
}

.bg-\[var\(--primary\)\] {
  background-color: var(--primary);
}

.bg-\[var\(--primary\)\]\/10 {
  background-color: var(--primary);
}

@supports (color: color-mix(in lab, red, red)) {
  .bg-\[var\(--primary\)\]\/10 {
    background-color: color-mix(in oklab, var(--primary) 10%, transparent);
  }
}

.bg-\[var\(--secondary\)\] {
  background-color: var(--secondary);
}

.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}

.from-\[var\(--primary\)\] {
  --tw-gradient-from: var(--primary);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.bg-clip-text {
  background-clip: text;
}

.text-center {
  text-align: center;
}

.text-\[var\(--foreground\)\] {
  color: var(--foreground);
}

.text-\[var\(--muted-foreground\)\] {
  color: var(--muted-foreground);
}

.text-\[var\(--primary\)\] {
  color: var(--primary);
}

.text-\[var\(--primary-foreground\)\] {
  color: var(--primary-foreground);
}

.text-\[var\(--secondary-foreground\)\] {
  color: var(--secondary-foreground);
}

.text-transparent {
  color: #0000;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-0 {
  opacity: 0;
}

.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.duration-300 {
  --tw-duration: .3s;
  transition-duration: .3s;
}

@media (hover: hover) {
  .group-hover\:text-\[var\(--primary\)\]:is(:where(.group):hover *) {
    color: var(--primary);
  }
}

@media (hover: hover) {
  .group-hover\:opacity-10:is(:where(.group):hover *) {
    opacity: .1;
  }
}

@media (hover: hover) {
  .hover\:bg-\[var\(--accent\)\]:hover {
    background-color: var(--accent);
  }
}

@media (hover: hover) {
  .hover\:text-\[var\(--foreground\)\]:hover {
    color: var(--foreground);
  }
}

@media (hover: hover) {
  .hover\:text-\[var\(--primary\)\]:hover {
    color: var(--primary);
  }
}

@media (hover: hover) {
  .hover\:opacity-80:hover {
    opacity: .8;
  }
}

@media (hover: hover) {
  .hover\:opacity-90:hover {
    opacity: .9;
  }
}

:root {
  --background: #fafafa;
  --foreground: #171717;
  --card: #fff;
  --card-foreground: #171717;
  --primary: #06c;
  --primary-foreground: #fff;
  --secondary: #f3f4f6;
  --secondary-foreground: #171717;
  --muted: #f9fafb;
  --muted-foreground: #6b7280;
  --accent: #f3f4f6;
  --accent-foreground: #171717;
  --border: #e5e7eb;
  --radius: .5rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
    --card: #171717;
    --card-foreground: #ededed;
    --primary: #4d9fff;
    --primary-foreground: #000;
    --secondary: #262626;
    --secondary-foreground: #ededed;
    --muted: #262626;
    --muted-foreground: #a3a3a3;
    --accent: #262626;
    --accent-foreground: #ededed;
    --border: #262626;
  }
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background: var(--background);
  color: var(--foreground);
  min-height: 100vh;
  font-family: system-ui, -apple-system, sans-serif;
  line-height: 1.6;
}

.prose {
  max-width: 65ch;
}

.prose h1 {
  margin-bottom: 1rem;
  font-size: 2.5rem;
  font-weight: 800;
  line-height: 1.2;
}

.prose h2 {
  margin-top: 2rem;
  margin-bottom: 1rem;
  font-size: 1.875rem;
  font-weight: 700;
}

.prose h3 {
  margin-top: 1.5rem;
  margin-bottom: .75rem;
  font-size: 1.5rem;
  font-weight: 600;
}

.prose p {
  color: var(--foreground);
  opacity: .9;
  margin-bottom: 1.25rem;
}

.prose pre {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  margin-bottom: 1.5rem;
  padding: 1rem;
  overflow-x: auto;
}

.prose code {
  background: var(--muted);
  border-radius: .25rem;
  padding: .125rem .375rem;
  font-family: monospace;
  font-size: .875rem;
}

.prose pre code {
  background: none;
  padding: 0;
}

.prose a {
  color: var(--primary);
  text-underline-offset: .25rem;
  text-decoration: underline;
  transition: opacity .2s;
}

.prose a:hover {
  opacity: .8;
}

.prose blockquote {
  border-left: 3px solid var(--primary);
  color: var(--muted-foreground);
  margin: 1.5rem 0;
  padding-left: 1rem;
  font-style: italic;
}

.prose ul, .prose ol {
  margin-bottom: 1.25rem;
  padding-left: 1.5rem;
}

.prose li {
  margin-bottom: .5rem;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-in {
  animation: .5s ease-out fade-in;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

/*# sourceMappingURL=src_app_globals_css_f9ee138c._.single.css.map*/